name: PR from PA thegraph private repo into public repo

on: 
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to pull from Perpetual-Altruism-Ltd/graph-node'
        required: true
        default: 'master'


jobs:
  createBranchAndPR:
    runs-on: self-hosted
    steps:

      - name: Install Github CLI
        run: |
          sudo apt update
          sudo apt install -y curl
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install -y gh

      - name: Cleanup
        run: rm -rf publicRepo

      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          path: publicRepo
          repository: Perpetual-Altruism-Ltd/graph-node

      - name: Get back latest state from Perpetual-Altruism-Ltd/graph-node-mynft, branch ${{ github.event.inputs.branch }}, create branch, and push
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd publicRepo
          git checkout ${{ github.event.inputs.branch }}
          git remote add private https://github.com/Perpetual-Altruism-Ltd/graph-node-mynft.git
          git fetch private
          git checkout -b ${{ github.event.inputs.branch }}-pullFromPrivate private/${{ github.event.inputs.branch }}
          git push origin ${{ github.event.inputs.branch }}-pullFromPrivate
          gh pr create --base ${{ github.event.inputs.branch }} --head ${{ github.event.inputs.branch }}-pullFromPrivate --title "PR to merge downstream code from Perpetual-Altruism-Ltd/graph-node-mynft (private), branch ${{ github.event.inputs.branch }} into Perpetual-Altruism-Ltd/graph-node (public), branch ${{ github.event.inputs.branch }}" --body "..."